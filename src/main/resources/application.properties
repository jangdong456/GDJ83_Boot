spring.application.name=GDJ83_boot


#키 = 값형식
# '=' 앞뒤로 띄어쓰기 하면 안됨
# 웬만한 것들은 이미 키로 설정되어 있음
# 사용자가 새로 만들 수도 있음

# DB내용을 다른 properties 파일로 분리 후 ignore에 등록
spring.config.import=application-db.properties

###  Server Port 변경
server.port=80


### JSP 연동
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

## logging 전역 설정
logging.level.root=info

###  인코딩 설정
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.force=true

## mybatis (위치)
#mybatis.mapper-locations=classpath:database/mappers/*Mapper.xml
#mybatis.config-location=classpath:database/config/mybatisConfig.xml

# mybatis alias 설정
# base package명을 입력하면 하위 패키지 까지 적용됨
# 하지만 com.jang.app안에 동일한 class명이 있을 경우에는 error를 발생 시킨다.
# com.jang.app 이렇게 적으면 sprignboot가 이 패키지 내에서(com.jang.app) 찾아본다
# 장점 : 나중에 협업시 충돌발생이 적어진다.
mybatis.type-aliases-package=com.jang.app

# DB에서는 주로 SnakeCase를 많이 사용한다
# Java에서는 주로 CamelCase를 많이 사용한다.
# 그래서 따로따로 위에처럼 사용해도 되지만 둘이 맞추려면
# 기본값은 false
mybatis.configuration.map-underscore-to-camel-case=true
 
